<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <include
    file="$(find gazebo_ros)/launch/empty_world.launch" />
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 base_link base_footprint 40" />
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find autonomous_wheelchair)/urdf/autonomous_wheelchair.urdf -urdf -model autonomous_wheelchair"
    output="screen" />
  <param
    name="robot_description"
    textfile="$(find autonomous_wheelchair)/urdf/autonomous_wheelchair.urdf" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />
  <arg
    name="model" />
  <arg
    name="gui"
    default="False" />
  <param
    name="use_gui"
    value="$(arg gui)" />
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" />
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
  <node
    name="rviz"
    pkg="rviz"
    type="rviz"
    args="-d $(find autonomous_wheelchair)/config/simulation.rviz" />

  <!-- Teleop -->
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard"  output="screen" launch-prefix="xterm -e">
    <remap from="/cmd_vel" to="/autonomous_wheelchair/cmd_vel" />
  </node>

  <!-- Controllers -->
  <rosparam file="$(find autonomous_wheelchair)/config/controllers.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/autonomous_wheelchair" args="left_wheel_controller left_wheel_controller joint_state_controller"/>


</launch>